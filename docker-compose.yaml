services:
  api:
    image: api                          #
    build:                              #  replace this with image: turekjakub/strava_client:api to use the image from dockerhub instead of building it from repo
     context: .                         #
     dockerfile: ./Dockerfile           #
    command: run
    restart: unless-stopped
    environment:
      - HOST_ADDRESS=0.0.0.0
      - PORT=80 
      - CONNECTION_STRING=your_mongodb_connection_string_here
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.api.rule=Host(`your_hostname_here`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=api-https-redirect"
      - "traefik.http.middlewares.api-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.api-https-redirect.redirectscheme.permanent=true"

      - "traefik.http.routers.api-https.rule=Host(`your_hostname_here`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.api-https.middlewares=api-stripprefix"
      - "traefik.http.routers.api-https.entrypoints=websecure"
      - "traefik.http.routers.api-https.tls.certresolver=myresolver"
      - "traefik.http.services.api-https.loadbalancer.server.port=80" # replace to use different port then is exposd in Dockerfile

    volumes:
      - path_to_your_mongodb_auth_cert_here:/usr/api/certs/cert.pem
  frontend:
    image: frontend                            #
    build:                                     #   replace this with image: turekjakub/strava_client:frontend to use the image from dockerhub instead of building it from repo
     context: .                                #
     dockerfile: ./frontend/Dockerfile         #
    restart: unless-stopped
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.frontend.rule=Host(`your_hostname_here`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.middlewares=frontend-https-redirect"
      - "traefik.http.middlewares.frontend-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.frontend-https-redirect.redirectscheme.permanent=true"

      - "traefik.http.routers.frontend-https.rule=Host(`your_hostname_here`)"
      - "traefik.http.services.frontend-https.loadbalancer.server.port=80" # replace to use different port then is exposd in Dockerfile
      - "traefik.http.routers.frontend-https.entrypoints=websecure"
      - "traefik.http.routers.frontend-https.tls.certresolver=myresolver"
  traefik:
    image: "traefik:v2.0.0-rc3"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your_email_here"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

    
    


    
